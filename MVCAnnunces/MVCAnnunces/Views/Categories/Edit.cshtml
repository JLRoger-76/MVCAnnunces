@model MVCAnnunces.dal.Entity.Category

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Category</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CategoryId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control form-control-sm w200" id="ParentId" name="ParentId">
                    @Html.Raw(DropdownMLCategories())
                </select><br />
                @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@{
    string DropdownMLCategories(int parentId = 0, string submark = "", int selected = 0)
    {
        string html = "";
        foreach (var cat in ViewData["Categories"] as IList<MVCAnnunces.dal.Entity.Category>)
        {
            if (cat.ParentId == parentId)
            {
                html += "'<option value=\"" + @cat.CategoryId + "\"";
                if (selected == cat.CategoryId) { html += " selected "; }
                html += ">" + submark + cat.Name + "</option>";
                html += DropdownMLCategories(cat.CategoryId, submark + "--");
            }
        }
        return html;
    }
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
